module adder_axi_stream (
    input  wire         aclk,
    input  wire         aresetn,

    // Slave side (input stream)
    input  wire [31:0]  s_axis_tdata,
    input  wire         s_axis_tvalid,
    output wire         s_axis_tready,
    input  wire         s_axis_tlast,

    // Master side (output stream)
    output reg  [31:0]  m_axis_tdata,
    output reg          m_axis_tvalid,
    input  wire         m_axis_tready,
    output reg          m_axis_tlast
);

    // Always ready to accept data if downstream is ready
    assign s_axis_tready = m_axis_tready;

    always @(posedge aclk) begin
        if (!aresetn) begin
            m_axis_tvalid <= 0;
            m_axis_tdata  <= 0;
            m_axis_tlast  <= 0;
        end else begin
            if (s_axis_tvalid && s_axis_tready) begin
                m_axis_tdata  <= s_axis_tdata + 32'd4;  // add constant
                m_axis_tvalid <= 1;
                m_axis_tlast  <= s_axis_tlast;         // pass tlast through
            end else if (m_axis_tvalid && m_axis_tready) begin
                // Once accepted by downstream, clear valid
                m_axis_tvalid <= 0;
                m_axis_tlast  <= 0;
            end
        end
    end
endmodule
